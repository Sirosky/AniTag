{
	"0" : "No stretching happens. One unit in the scene corresponds to one pixel on the screen.\nStretch Aspect has no effect. \nGood option for full control over every screen pixel, best option for 3D games.",
	"1" : "Size is stretched to cover the whole screen, Good option for high resolution 2D artwork.\nIgnore the aspect ratio when stretching the screen.",
	"2" : "Size is stretched to cover the whole screen, Good option for high resolution 2D artwork.\nViewport will retains its original size regardless of the screen resolution, \nblack bars will be added to the top/bottom of the screen (“letterboxing”) \nor the sides (“pillarboxing”). Good option if you know the aspect ratio of your target \ndevices in advance, or if you don’t want to handle different aspect ratios.",
	"3" : "Size is stretched to cover the whole screen, Good option for high resolution 2D artwork.\nIf the screen is wider than the base size, black bars are added at the left/right (pillarboxing).\nBut if the screen is taller than the base resolution, the viewport will be grown in the \nvertical direction (and more content will be visible to the bottom). \nYou can also think of this as “Expand Vertically. Best option for creating GUIs \nor HUDs that scale, so some controls can be anchored to the bottom.",
	"4" : "Size is stretched to cover the whole screen, Good option for high resolution 2D artwork.\nIf the screen is taller than the base size, black bars are added at the top/bottom (letterboxing). \nBut if the screen is wider than the base resolution, the viewport will be grown in the \nhorizontal direction (and more content will be visible to the right). \nYou can also think of this as “Expand Horizontally”. This is usually the best option \nfor 2D games that scroll horizontally (like runners or platformers).",
	"5" : "Size is stretched to cover the whole screen, Good option for high resolution 2D artwork.\nDepending on the screen aspect ratio, the viewport will either be larger in the \nhorizontal direction (if the screen is wider than the base size) or in the vertical direction (if the \nscreen is taller than the original size)",
	"6" : "Scene is rendered to viewport, then viewport is scaled to fit the screen. Useful with \npixel-precise games, or rendering to a lower resolution to improve performance.\nIgnore the aspect ratio when stretching the screen.",
	"7" : "Scene is rendered to viewport, then viewport is scaled to fit the screen. Useful with \npixel-precise games, or rendering to a lower resolution to improve performance.\nViewport will retains its original size regardless of the screen resolution, \nblack bars will be added to the top/bottom of the screen (“letterboxing”) \nor the sides (“pillarboxing”). Good option if you know the aspect ratio of your target \ndevices in advance, or if you don’t want to handle different aspect ratios.",
	"8" : "Scene is rendered to viewport, then viewport is scaled to fit the screen. Useful with \npixel-precise games, or rendering to a lower resolution to improve performance.\nIf the screen is wider than the base size, black bars are added at the left/right (pillarboxing).\nBut if the screen is taller than the base resolution, the viewport will be grown in the \nvertical direction (and more content will be visible to the bottom). \nYou can also think of this as “Expand Vertically. Best option for creating GUIs \nor HUDs that scale, so some controls can be anchored to the bottom.",
	"9" : "Scene is rendered to viewport, then viewport is scaled to fit the screen. Useful with \npixel-precise games, or rendering to a lower resolution to improve performance.\nIf the screen is taller than the base size, black bars are added at the top/bottom (letterboxing). \nBut if the screen is wider than the base resolution, the viewport will be grown in the \nhorizontal direction (and more content will be visible to the right). \nYou can also think of this as “Expand Horizontally”. This is usually the best option \nfor 2D games that scroll horizontally (like runners or platformers).",
	"10" : "Scene is rendered to viewport, then viewport is scaled to fit the screen. Useful with \npixel-precise games, or rendering to a lower resolution to improve performance.\nDepending on the screen aspect ratio, the viewport will either be larger in the \nhorizontal direction (if the screen is wider than the base size) or in the vertical direction\n(if the screen is taller than the original size)"
}